<?php
echo "1.PostgreSQL・Oracle SQL". '<br>';
echo "PostgreSQL（ポストグレエスキューエル）とはオープンソースのリレーショナルデータベース管理システム（RDBMS）です。
      Linux、macOSといったUNIX系OSもちろんのこと、Windowsにも対応しています。全てのソースは公開されており、用途を問わず無料で利用できます。
      またBSDライセンスという、オープンソースのライセンスの中でも非常に緩やかなライセンスを採用しているので、独自に機能の改変や追加を行っても
      公開義務はありません。
      データベースは、簡単に言えばデータを保存しておく「箱」の集まりです。もっと言えば、その箱に仕切りをつけることで、簡単にデータを整理した
      状態で閉まったり、そのデータをいろいろな場面で楽に取り出したりできるようにしたものがデータベースです。リレーショナルデータベース（RDB)
      は、その箱を、列と行を持つテーブルのセット、つまり表形式で持ち、一つの箱（＝表）に入ったデータを別の箱のデータと関連づけることで、
      複雑なデータや大規模なデータを柔軟に取り扱うことができるようにしてくれます。RDBMSは、子のRDBをコンピュータ上で操作できるようにした管理
      システムです。1986年、カリフォルニア大学バークレイ校でPOSTGRES（POST-inGRES）プロジェクトが始まり、当初Postgres（ポストグレス）
      として誕生したデータベースは、1996年以降にはPostgreSQLへ名前を変えます。その後、インターネットを通じて世界中の研究者／ソフトウェア
      開発者などのボランティアらの手によって、多様な機能追加や絶え間ないバグ修正を20年以上に渡って施されてきたPostgreSQLは、現在では他の
      商用／オープンソースのRDBMS製品と比較してもまったく遜色のない、高い性能、機能性、そして信頼性を誇るRDBMSへと成長しました。". '<br>';
echo "SQlとは関係データベース管理システム（RDBMS）において、データの定義や操作を行うための言語です。
      OrcleとはOracleという会社のこと、もしくは、Oracle Databaseのことを指している。
      データベースへの処理はよく使われているプログラミング言語ではできないので、専用のSQL言語を利用する必要があります。
      ". '<br>'. '<br>';
echo "Tortoise Git・Tortoise SVN". '<br>';
echo "Tortoise Gitとは、Gitをより扱いやすくするために開発されたWindows用のソフトウェアです。無料で扱うことができます。
      TortoiseGitは分散型バージョン管理システムであるGitのクライアントで、TortoiseSVNをもとに、Microsoft Windows シェル拡張として実装
      されている。". '<br>';
echo "SVNとは、Subversionの略。Subversionとは、著名なオープンソースのバージョン管理システムの一つ。複数の開発者が共同で一つのソフトウェアを
      開発する際などに、ソースコードやドキュメントを管理するのに用いられる。
      TortoiseSVNとは、Subversionのクライアントで、Windowsのシェルエクステンションとして機能します。専用のGUIを備えており、CUIの
      Subvesionより、直感的で簡単に扱うことができます。Subversionはクライアント/サーバ型の集中型バージョン管理システムです。". '<br>'. '<br>';
echo "3.外部設計・内部設計". '<br>';
echo "外部設計と内部設計は、どちらもシステム開発の工程の一つです。システムに限らず、何を製作する場合でも、設計は完成度を左右する重要な工程です。
      設計がずさんままでは、質の良い製作物を作ることができません。ソフトウェアにおける設計は、「外部設計」と「内部設計」の二つに大別できます。". '<br>';
echo "外部設計とは、基本設計や外部設計とも呼ばれ、一般的に外部設計までが上流工程に含まれます。要件定義で決定した機能や性能、制約条件などをもとにして
      システムの基本となる設計を行います。操作画面や操作方法、データ出力など、ユーザーから見えるインターフェイス部分の仕様を決定したり、
      セキュリティや運用規定、システム開発のスケジュールや費用などを設計したりと、基本的にユーザーに向けた使用を設計するのが外部設計です。". '<br>';
echo "内部設計とは、外部設計を基に、システム内部の動作や機能、物理データなど、ユーザーから見えにくい詳細な部分の設計を行います。外部設計とその後に行われる
      詳細設計の間の工程ですが、内部システムに特化しているため、詳細設計と同じ工程として扱われることもあります。プログラム機能を単体に分割し、そこで使用する物理
      データや入出力を設計します。外部設計の結果をプログラミングしやすくするのが内部設計の役割です。";
?>